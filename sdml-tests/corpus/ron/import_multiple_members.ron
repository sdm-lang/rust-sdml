Module {
    source_file: Some(
        "MANIFEST_PATH/corpus/import_multiple_members.sdm",
    ),
    file_id: Some(
        0,
    ),
    span: Some(
        Span {
            start: 0,
            end: 66,
        },
    ),
    name: Identifier {
        span: Some(
            Span {
                start: 7,
                end: 25,
            },
        ),
        value: "corpus_test_import",
    },
    base_uri: Some(
        HeaderValue {
            span: None,
            value: Url {
                scheme: "http",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "example.org",
                    ),
                ),
                port: None,
                path: "MANIFEST_PATH/corpus/import_multiple_members.sdm/",
                query: None,
                fragment: None,
            },
        },
    ),
    version_info: None,
    version_uri: None,
    imports: [
        ImportStatement {
            span: Some(
                Span {
                    start: 32,
                    end: 60,
                },
            ),
            from_clause: None,
            imports: [
                Member(
                    MemberImport {
                        span: Some(
                            Span {
                                start: 41,
                                end: 49,
                            },
                        ),
                        name: QualifiedIdentifier {
                            span: Some(
                                Span {
                                    start: 41,
                                    end: 49,
                                },
                            ),
                            module: Identifier {
                                span: Some(
                                    Span {
                                        start: 41,
                                        end: 44,
                                    },
                                ),
                                value: "xsd",
                            },
                            member: Identifier {
                                span: Some(
                                    Span {
                                        start: 45,
                                        end: 49,
                                    },
                                ),
                                value: "base",
                            },
                        },
                        renamed_as: None,
                    },
                ),
                Member(
                    MemberImport {
                        span: Some(
                            Span {
                                start: 50,
                                end: 58,
                            },
                        ),
                        name: QualifiedIdentifier {
                            span: Some(
                                Span {
                                    start: 50,
                                    end: 58,
                                },
                            ),
                            module: Identifier {
                                span: Some(
                                    Span {
                                        start: 50,
                                        end: 53,
                                    },
                                ),
                                value: "xml",
                            },
                            member: Identifier {
                                span: Some(
                                    Span {
                                        start: 54,
                                        end: 58,
                                    },
                                ),
                                value: "lang",
                            },
                        },
                        renamed_as: None,
                    },
                ),
            ],
        },
    ],
    annotations: [],
    definitions: {},
}
