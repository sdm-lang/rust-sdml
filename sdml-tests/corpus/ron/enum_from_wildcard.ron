Module {
    source_file: Some(
        "/Users/simonjo/Projects/sdm-lang/rust-sdml/sdml-tests/corpus/enum_from_wildcard.sdm",
    ),
    file_id: Some(
        0,
    ),
    span: Some(
        Span {
            start: 0,
            end: 131,
        },
    ),
    name: Identifier {
        span: Some(
            Span {
                start: 44,
                end: 60,
            },
        ),
        value: "corpus_test_enum",
    },
    base_uri: Some(
        HeaderValue {
            span: None,
            value: Url {
                scheme: "http",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "example.org",
                    ),
                ),
                port: None,
                path: "/Users/simonjo/Projects/sdm-lang/rust-sdml/sdml-tests/corpus/enum_from_wildcard.sdm/",
                query: None,
                fragment: None,
            },
        },
    ),
    version_info: None,
    version_uri: None,
    imports: [],
    annotations: [],
    definitions: {
        Identifier {
            span: Some(
                Span {
                    start: 72,
                    end: 80,
                },
            ),
            value: "NameKind",
        }: Enum(
            EnumDef {
                span: Some(
                    Span {
                        start: 67,
                        end: 124,
                    },
                ),
                name: Identifier {
                    span: Some(
                        Span {
                            start: 72,
                            end: 80,
                        },
                    ),
                    value: "NameKind",
                },
                body: Some(
                    EnumBody {
                        span: Some(
                            Span {
                                start: 81,
                                end: 124,
                            },
                        ),
                        annotations: [],
                        from: Some(
                            FromDefinition {
                                span: None,
                                definition: Identifier(
                                    Identifier {
                                        span: Some(
                                            Span {
                                                start: 93,
                                                end: 98,
                                            },
                                        ),
                                        value: "Names",
                                    },
                                ),
                                with_members: {},
                            },
                        ),
                        variants: {
                            Identifier {
                                span: Some(
                                    Span {
                                        start: 110,
                                        end: 118,
                                    },
                                ),
                                value: "External",
                            }: ValueVariant {
                                span: Some(
                                    Span {
                                        start: 110,
                                        end: 118,
                                    },
                                ),
                                name: Identifier {
                                    span: Some(
                                        Span {
                                            start: 110,
                                            end: 118,
                                        },
                                    ),
                                    value: "External",
                                },
                                body: None,
                            },
                        },
                    },
                ),
            },
        ),
    },
}
