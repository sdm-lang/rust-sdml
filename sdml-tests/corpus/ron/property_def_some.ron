Module {
    source_file: Some(
        "MANIFEST_PATH/corpus/property_def_some.sdm",
    ),
    file_id: Some(
        0,
    ),
    span: Some(
        Span {
            start: 0,
            end: 121,
        },
    ),
    name: Identifier {
        span: Some(
            Span {
                start: 7,
                end: 27,
            },
        ),
        value: "corpus_test_property",
    },
    base_uri: Some(
        HeaderValue {
            span: None,
            value: Url {
                scheme: "http",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "example.org",
                    ),
                ),
                port: None,
                path: "MANIFEST_PATH/corpus/property_def_some.sdm/",
                query: None,
                fragment: None,
            },
        },
    ),
    version_info: None,
    version_uri: None,
    imports: [],
    annotations: [],
    definitions: {
        Identifier {
            span: Some(
                Span {
                    start: 42,
                    end: 52,
                },
            ),
            value: "identifier",
        }: Property(
            PropertyDef {
                span: None,
                member: MemberDef {
                    span: Some(
                        Span {
                            start: 42,
                            end: 116,
                        },
                    ),
                    name: Identifier {
                        span: Some(
                            Span {
                                start: 42,
                                end: 52,
                            },
                        ),
                        value: "identifier",
                    },
                    target_cardinality: Cardinality {
                        span: Some(
                            Span {
                                start: 56,
                                end: 59,
                            },
                        ),
                        ordering: None,
                        uniqueness: None,
                        range: CardinalityRange {
                            span: None,
                            min: 2,
                            max: Some(
                                2,
                            ),
                        },
                    },
                    target_type: Type(
                        QualifiedIdentifier(
                            QualifiedIdentifier {
                                span: Some(
                                    Span {
                                        start: 60,
                                        end: 77,
                                    },
                                ),
                                module: Identifier {
                                    span: Some(
                                        Span {
                                            start: 60,
                                            end: 67,
                                        },
                                    ),
                                    value: "account",
                                },
                                member: Identifier {
                                    span: Some(
                                        Span {
                                            start: 68,
                                            end: 77,
                                        },
                                    ),
                                    value: "AccountId",
                                },
                            },
                        ),
                    ),
                    body: Some(
                        AnnotationOnlyBody {
                            span: Some(
                                Span {
                                    start: 78,
                                    end: 116,
                                },
                            ),
                            annotations: [
                                Property(
                                    AnnotationProperty {
                                        span: Some(
                                            Span {
                                                start: 85,
                                                end: 110,
                                            },
                                        ),
                                        name_reference: QualifiedIdentifier(
                                            QualifiedIdentifier {
                                                span: Some(
                                                    Span {
                                                        start: 86,
                                                        end: 101,
                                                    },
                                                ),
                                                module: Identifier {
                                                    span: Some(
                                                        Span {
                                                            start: 86,
                                                            end: 90,
                                                        },
                                                    ),
                                                    value: "skos",
                                                },
                                                member: Identifier {
                                                    span: Some(
                                                        Span {
                                                            start: 91,
                                                            end: 101,
                                                        },
                                                    ),
                                                    value: "definition",
                                                },
                                            },
                                        ),
                                        value: Simple(
                                            String(
                                                LanguageString {
                                                    span: Some(
                                                        Span {
                                                            start: 104,
                                                            end: 110,
                                                        },
                                                    ),
                                                    value: "a",
                                                    language: Some(
                                                        LanguageTag {
                                                            span: Some(
                                                                Span {
                                                                    start: 107,
                                                                    end: 110,
                                                                },
                                                            ),
                                                            value: LanguageTag {
                                                                serialization: "en",
                                                                language_end: 2,
                                                                extlang_end: 2,
                                                                script_end: 2,
                                                                region_end: 2,
                                                                variant_end: 2,
                                                                extension_end: 2,
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            ],
                        },
                    ),
                },
            },
        ),
    },
}
